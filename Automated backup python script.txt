import subprocess
import logging
from datetime import datetime

# Configuration
source_dir = '/path/to/your/source/directory'
remote_host = 'username@remote_server:/path/to/remote/backup/directory'
log_file = 'backup.log'

# Logging configuration
logging.basicConfig(filename=log_file, level=logging.INFO, format='%(asctime)s - %(message)s')
console = logging.StreamHandler()
console.setLevel(logging.INFO)
formatter = logging.Formatter('%(asctime)s - %(message)s')
console.setFormatter(formatter)
logging.getLogger('').addHandler(console)

def perform_backup():
    try:
        # Construct rsync command
        rsync_cmd = ['rsync', '-avz', '--progress', '--delete', source_dir, remote_host]

        # Run rsync command
        logging.info(f"Starting backup of {source_dir} to {remote_host}...")
        subprocess.run(rsync_cmd, check=True)
        
        # Log success
        logging.info(f"Backup completed successfully.")
    except subprocess.CalledProcessError as e:
        # Log error if rsync command fails
        logging.error(f"Error during backup: {e}")
        raise

if __name__ == "__main__":
    try:
        perform_backup()
    except Exception as e:
        logging.error(f"Backup failed: {e}")
